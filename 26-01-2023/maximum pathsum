/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int max = Integer.MIN_VALUE;
    public int maxPathSum(TreeNode root) {
        if(root.left==null && root.right==null)
        {
            return root.val;
        }
        int sn=path(root);
        return max;
           
    }
    public int path(TreeNode t)
    {
        if(t==null)
        {
            return 0;
        }
        int left = Math.max(0,path(t.left));
        int right = Math.max(0,path(t.right));
        max = Math.max(max,left+right+t.val);
        return Math.max(left,right)+t.val;
    }
   
}
